syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "github.com/srikrsna/protoc-gen-gotag/tagger/tagger.proto";

message Role {
    string ID = 1 [(tagger.tags) = "bson:\"_id,omitempty\""];
    string Name = 2 [(tagger.tags) = "bson:\"name,omitempty\""];
    string Description = 3 [(tagger.tags) = "bson:\"description,omitempty\""];
    string CreatedBy = 4 [(tagger.tags) = "bson:\"createdby,omitempty\""];
    google.protobuf.Timestamp CreatedAt = 5 [(tagger.tags) = "bson:\"createdat,omitempty\""];
    string ModifiedBy = 6 [(tagger.tags) = "bson:\"modifiedby,omitempty\""];
    google.protobuf.Timestamp ModifiedAt = 7 [(tagger.tags) = "bson:\"modifiedat,omitempty\""];
}

message RoleSliceReq {
    // do not filter
}

message RoleSliceRes {
    // return a collection of Roles
    repeated Role Roles = 1;
}

message RoleCreateReq {
    // create a Role
    Role Role = 1;
}

message RoleCreateRes {
    // reutrn an id
    string ID = 1;
}

message RoleReadReq {
    // read a Role by id
    string ID = 1;
}

message RoleReadRes {
    // return a Role
    Role Role = 1;
}

message RoleUpdateReq {
    // update a Role by id
    Role Role = 1;
}

message RoleUpdateRes {
    // return number of Roles updated
    // should equal 1 on success
    int64 Updated = 1;
}

message RoleDeleteReq {
    // delete a Role by id
    string ID = 1;
}

message RoleDeleteRes {
    // return number of Roles deleted
    // should equal 1 on success
    int64 Deleted = 1;
}

service RoleService {
    rpc Slice(RoleSliceReq) returns (RoleSliceRes);
    rpc Create(RoleCreateReq) returns (RoleCreateRes);
    rpc Read(RoleReadReq) returns (RoleReadRes);
    rpc Update(RoleUpdateReq) returns (RoleUpdateRes);
    rpc Delete(RoleDeleteReq) returns (RoleDeleteRes);
}
