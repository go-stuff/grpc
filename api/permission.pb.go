// Code generated by protoc-gen-go. DO NOT EDIT.
// source: permission.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Permission struct {
	// @inject_tag: bson:"_id"
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" bson:"_id"`
	// @inject_tag: bson:"roleid"
	RoleID string `protobuf:"bytes,2,opt,name=RoleID,proto3" json:"RoleID,omitempty" bson:"roleid"`
	// @inject_tag: bson:"route"
	Route string `protobuf:"bytes,3,opt,name=Route,proto3" json:"Route,omitempty" bson:"route"`
	// @inject_tag: bson:"createdby"
	CreatedBy string `protobuf:"bytes,4,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" bson:"createdby"`
	// @inject_tag: bson:"createdat"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" bson:"createdat"`
	// @inject_tag: bson:"modifiedby"
	ModifiedBy string `protobuf:"bytes,6,opt,name=ModifiedBy,proto3" json:"ModifiedBy,omitempty" bson:"modifiedby"`
	// @inject_tag: bson:"modifiedat"
	ModifiedAt           *timestamp.Timestamp `protobuf:"bytes,7,opt,name=ModifiedAt,proto3" json:"ModifiedAt,omitempty" bson:"modifiedat"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{0}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Permission) GetRoleID() string {
	if m != nil {
		return m.RoleID
	}
	return ""
}

func (m *Permission) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *Permission) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Permission) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Permission) GetModifiedBy() string {
	if m != nil {
		return m.ModifiedBy
	}
	return ""
}

func (m *Permission) GetModifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedAt
	}
	return nil
}

type PermissionSliceReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionSliceReq) Reset()         { *m = PermissionSliceReq{} }
func (m *PermissionSliceReq) String() string { return proto.CompactTextString(m) }
func (*PermissionSliceReq) ProtoMessage()    {}
func (*PermissionSliceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{1}
}

func (m *PermissionSliceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionSliceReq.Unmarshal(m, b)
}
func (m *PermissionSliceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionSliceReq.Marshal(b, m, deterministic)
}
func (m *PermissionSliceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionSliceReq.Merge(m, src)
}
func (m *PermissionSliceReq) XXX_Size() int {
	return xxx_messageInfo_PermissionSliceReq.Size(m)
}
func (m *PermissionSliceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionSliceReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionSliceReq proto.InternalMessageInfo

type PermissionSliceRes struct {
	// return a collection of Permissions
	Permissions          []*Permission `protobuf:"bytes,1,rep,name=Permissions,proto3" json:"Permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PermissionSliceRes) Reset()         { *m = PermissionSliceRes{} }
func (m *PermissionSliceRes) String() string { return proto.CompactTextString(m) }
func (*PermissionSliceRes) ProtoMessage()    {}
func (*PermissionSliceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{2}
}

func (m *PermissionSliceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionSliceRes.Unmarshal(m, b)
}
func (m *PermissionSliceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionSliceRes.Marshal(b, m, deterministic)
}
func (m *PermissionSliceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionSliceRes.Merge(m, src)
}
func (m *PermissionSliceRes) XXX_Size() int {
	return xxx_messageInfo_PermissionSliceRes.Size(m)
}
func (m *PermissionSliceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionSliceRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionSliceRes proto.InternalMessageInfo

func (m *PermissionSliceRes) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type PermissionCreateReq struct {
	// create a Permission
	Permission           *Permission `protobuf:"bytes,1,opt,name=Permission,proto3" json:"Permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PermissionCreateReq) Reset()         { *m = PermissionCreateReq{} }
func (m *PermissionCreateReq) String() string { return proto.CompactTextString(m) }
func (*PermissionCreateReq) ProtoMessage()    {}
func (*PermissionCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{3}
}

func (m *PermissionCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionCreateReq.Unmarshal(m, b)
}
func (m *PermissionCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionCreateReq.Marshal(b, m, deterministic)
}
func (m *PermissionCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionCreateReq.Merge(m, src)
}
func (m *PermissionCreateReq) XXX_Size() int {
	return xxx_messageInfo_PermissionCreateReq.Size(m)
}
func (m *PermissionCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionCreateReq proto.InternalMessageInfo

func (m *PermissionCreateReq) GetPermission() *Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

type PermissionCreateRes struct {
	// reutrn an id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionCreateRes) Reset()         { *m = PermissionCreateRes{} }
func (m *PermissionCreateRes) String() string { return proto.CompactTextString(m) }
func (*PermissionCreateRes) ProtoMessage()    {}
func (*PermissionCreateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{4}
}

func (m *PermissionCreateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionCreateRes.Unmarshal(m, b)
}
func (m *PermissionCreateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionCreateRes.Marshal(b, m, deterministic)
}
func (m *PermissionCreateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionCreateRes.Merge(m, src)
}
func (m *PermissionCreateRes) XXX_Size() int {
	return xxx_messageInfo_PermissionCreateRes.Size(m)
}
func (m *PermissionCreateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionCreateRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionCreateRes proto.InternalMessageInfo

func (m *PermissionCreateRes) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type PermissionReadReq struct {
	// read a Permission by id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionReadReq) Reset()         { *m = PermissionReadReq{} }
func (m *PermissionReadReq) String() string { return proto.CompactTextString(m) }
func (*PermissionReadReq) ProtoMessage()    {}
func (*PermissionReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{5}
}

func (m *PermissionReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionReadReq.Unmarshal(m, b)
}
func (m *PermissionReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionReadReq.Marshal(b, m, deterministic)
}
func (m *PermissionReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionReadReq.Merge(m, src)
}
func (m *PermissionReadReq) XXX_Size() int {
	return xxx_messageInfo_PermissionReadReq.Size(m)
}
func (m *PermissionReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionReadReq proto.InternalMessageInfo

func (m *PermissionReadReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type PermissionReadRes struct {
	// return a Permission
	Permission           *Permission `protobuf:"bytes,1,opt,name=Permission,proto3" json:"Permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PermissionReadRes) Reset()         { *m = PermissionReadRes{} }
func (m *PermissionReadRes) String() string { return proto.CompactTextString(m) }
func (*PermissionReadRes) ProtoMessage()    {}
func (*PermissionReadRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{6}
}

func (m *PermissionReadRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionReadRes.Unmarshal(m, b)
}
func (m *PermissionReadRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionReadRes.Marshal(b, m, deterministic)
}
func (m *PermissionReadRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionReadRes.Merge(m, src)
}
func (m *PermissionReadRes) XXX_Size() int {
	return xxx_messageInfo_PermissionReadRes.Size(m)
}
func (m *PermissionReadRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionReadRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionReadRes proto.InternalMessageInfo

func (m *PermissionReadRes) GetPermission() *Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

type PermissionUpdateReq struct {
	// update a Permission by id
	Permission           *Permission `protobuf:"bytes,1,opt,name=Permission,proto3" json:"Permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PermissionUpdateReq) Reset()         { *m = PermissionUpdateReq{} }
func (m *PermissionUpdateReq) String() string { return proto.CompactTextString(m) }
func (*PermissionUpdateReq) ProtoMessage()    {}
func (*PermissionUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{7}
}

func (m *PermissionUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionUpdateReq.Unmarshal(m, b)
}
func (m *PermissionUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionUpdateReq.Marshal(b, m, deterministic)
}
func (m *PermissionUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionUpdateReq.Merge(m, src)
}
func (m *PermissionUpdateReq) XXX_Size() int {
	return xxx_messageInfo_PermissionUpdateReq.Size(m)
}
func (m *PermissionUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionUpdateReq proto.InternalMessageInfo

func (m *PermissionUpdateReq) GetPermission() *Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

type PermissionUpdateRes struct {
	// return number of Permissions updated
	// should equal 1 on success
	Updated              int64    `protobuf:"varint,1,opt,name=Updated,proto3" json:"Updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionUpdateRes) Reset()         { *m = PermissionUpdateRes{} }
func (m *PermissionUpdateRes) String() string { return proto.CompactTextString(m) }
func (*PermissionUpdateRes) ProtoMessage()    {}
func (*PermissionUpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{8}
}

func (m *PermissionUpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionUpdateRes.Unmarshal(m, b)
}
func (m *PermissionUpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionUpdateRes.Marshal(b, m, deterministic)
}
func (m *PermissionUpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionUpdateRes.Merge(m, src)
}
func (m *PermissionUpdateRes) XXX_Size() int {
	return xxx_messageInfo_PermissionUpdateRes.Size(m)
}
func (m *PermissionUpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionUpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionUpdateRes proto.InternalMessageInfo

func (m *PermissionUpdateRes) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type PermissionDeleteReq struct {
	// delete a Permission by id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionDeleteReq) Reset()         { *m = PermissionDeleteReq{} }
func (m *PermissionDeleteReq) String() string { return proto.CompactTextString(m) }
func (*PermissionDeleteReq) ProtoMessage()    {}
func (*PermissionDeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{9}
}

func (m *PermissionDeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionDeleteReq.Unmarshal(m, b)
}
func (m *PermissionDeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionDeleteReq.Marshal(b, m, deterministic)
}
func (m *PermissionDeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionDeleteReq.Merge(m, src)
}
func (m *PermissionDeleteReq) XXX_Size() int {
	return xxx_messageInfo_PermissionDeleteReq.Size(m)
}
func (m *PermissionDeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionDeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionDeleteReq proto.InternalMessageInfo

func (m *PermissionDeleteReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type PermissionDeleteRes struct {
	// return number of Permissions deleted
	// should equal 1 on success
	Deleted              int64    `protobuf:"varint,1,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionDeleteRes) Reset()         { *m = PermissionDeleteRes{} }
func (m *PermissionDeleteRes) String() string { return proto.CompactTextString(m) }
func (*PermissionDeleteRes) ProtoMessage()    {}
func (*PermissionDeleteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c837ef01cbda0ad8, []int{10}
}

func (m *PermissionDeleteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionDeleteRes.Unmarshal(m, b)
}
func (m *PermissionDeleteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionDeleteRes.Marshal(b, m, deterministic)
}
func (m *PermissionDeleteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionDeleteRes.Merge(m, src)
}
func (m *PermissionDeleteRes) XXX_Size() int {
	return xxx_messageInfo_PermissionDeleteRes.Size(m)
}
func (m *PermissionDeleteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionDeleteRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionDeleteRes proto.InternalMessageInfo

func (m *PermissionDeleteRes) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func init() {
	proto.RegisterType((*Permission)(nil), "api.Permission")
	proto.RegisterType((*PermissionSliceReq)(nil), "api.PermissionSliceReq")
	proto.RegisterType((*PermissionSliceRes)(nil), "api.PermissionSliceRes")
	proto.RegisterType((*PermissionCreateReq)(nil), "api.PermissionCreateReq")
	proto.RegisterType((*PermissionCreateRes)(nil), "api.PermissionCreateRes")
	proto.RegisterType((*PermissionReadReq)(nil), "api.PermissionReadReq")
	proto.RegisterType((*PermissionReadRes)(nil), "api.PermissionReadRes")
	proto.RegisterType((*PermissionUpdateReq)(nil), "api.PermissionUpdateReq")
	proto.RegisterType((*PermissionUpdateRes)(nil), "api.PermissionUpdateRes")
	proto.RegisterType((*PermissionDeleteReq)(nil), "api.PermissionDeleteReq")
	proto.RegisterType((*PermissionDeleteRes)(nil), "api.PermissionDeleteRes")
}

func init() { proto.RegisterFile("permission.proto", fileDescriptor_c837ef01cbda0ad8) }

var fileDescriptor_c837ef01cbda0ad8 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6b, 0xdb, 0x40,
	0x10, 0x44, 0x92, 0x2d, 0xe3, 0x35, 0xf4, 0x63, 0x6b, 0xdc, 0x43, 0x94, 0xd6, 0xa8, 0x14, 0xfc,
	0x24, 0x51, 0x17, 0x4a, 0x5b, 0xfa, 0xe2, 0x56, 0xb4, 0xf8, 0x21, 0x10, 0xce, 0xc9, 0x0f, 0x90,
	0xad, 0xb3, 0x39, 0x90, 0x73, 0xb2, 0x4e, 0x0e, 0xe4, 0xdf, 0xe5, 0x97, 0x85, 0xe0, 0x3b, 0xeb,
	0xc3, 0xb2, 0x44, 0x48, 0x1e, 0x77, 0x66, 0x6e, 0x76, 0x77, 0x56, 0x82, 0x37, 0x09, 0x4b, 0xb7,
	0x5c, 0x4a, 0x2e, 0x6e, 0xbc, 0x24, 0x15, 0x99, 0x40, 0x2b, 0x4c, 0xb8, 0xf3, 0x69, 0x23, 0xc4,
	0x26, 0x66, 0xbe, 0x82, 0x96, 0xfb, 0xb5, 0x9f, 0xf1, 0x2d, 0x93, 0x59, 0xb8, 0x4d, 0xb4, 0xca,
	0x7d, 0x30, 0x00, 0x2e, 0x8b, 0xa7, 0xf8, 0x0a, 0xcc, 0x79, 0x40, 0x8c, 0xb1, 0x31, 0xe9, 0x53,
	0x73, 0x1e, 0xe0, 0x08, 0x6c, 0x2a, 0x62, 0x36, 0x0f, 0x88, 0xa9, 0xb0, 0x63, 0x85, 0x43, 0xe8,
	0x52, 0xb1, 0xcf, 0x18, 0xb1, 0x14, 0xac, 0x0b, 0xfc, 0x00, 0xfd, 0xbf, 0x29, 0x0b, 0x33, 0x16,
	0xfd, 0xb9, 0x23, 0x1d, 0xc5, 0x94, 0x00, 0xfe, 0x28, 0xd8, 0x59, 0x46, 0xba, 0x63, 0x63, 0x32,
	0x98, 0x3a, 0x9e, 0x9e, 0xcf, 0xcb, 0xe7, 0xf3, 0xae, 0xf2, 0xf9, 0x68, 0x29, 0xc6, 0x8f, 0x00,
	0x17, 0x22, 0xe2, 0x6b, 0xae, 0x8c, 0x6d, 0x65, 0x5c, 0x41, 0xf0, 0x57, 0xc9, 0xcf, 0x32, 0xd2,
	0x7b, 0xd2, 0xba, 0xa2, 0x76, 0x87, 0x80, 0xe5, 0xfe, 0x8b, 0x98, 0xaf, 0x18, 0x65, 0x3b, 0xf7,
	0x7f, 0x03, 0x2a, 0xf1, 0x2b, 0x0c, 0x4a, 0x54, 0x12, 0x63, 0x6c, 0x4d, 0x06, 0xd3, 0xd7, 0x5e,
	0x98, 0x70, 0xaf, 0xc4, 0x69, 0x55, 0xe3, 0xfe, 0x83, 0x77, 0x65, 0xa9, 0x37, 0xa2, 0x6c, 0x87,
	0x7e, 0x35, 0x75, 0x95, 0x77, 0x83, 0x51, 0x45, 0xe2, 0x7e, 0x69, 0xf2, 0x91, 0xf5, 0x7b, 0xb9,
	0x9f, 0xe1, 0x6d, 0xc5, 0x80, 0x85, 0xd1, 0xa1, 0x59, 0x5d, 0x14, 0x9c, 0x8b, 0xe4, 0xf3, 0x27,
	0x3a, 0xd9, 0xec, 0x3a, 0x89, 0x5e, 0xba, 0x99, 0xdf, 0xe4, 0x23, 0x91, 0x40, 0x4f, 0x17, 0x91,
	0x32, 0xb1, 0x68, 0x5e, 0x9e, 0x46, 0x11, 0xb0, 0x98, 0xe9, 0xc6, 0xf5, 0x2d, 0xfd, 0x26, 0x99,
	0xf2, 0xd5, 0x45, 0xe1, 0x7b, 0x2c, 0xa7, 0xf7, 0x66, 0x35, 0x97, 0x05, 0x4b, 0x6f, 0xf9, 0x8a,
	0xe1, 0x4f, 0xe8, 0xaa, 0xfb, 0xe3, 0xfb, 0xda, 0x12, 0xf9, 0xb7, 0xe2, 0xb4, 0x10, 0x12, 0x7f,
	0x83, 0xad, 0x2f, 0x85, 0xa4, 0x26, 0x29, 0x3e, 0x04, 0xa7, 0x8d, 0x91, 0xf8, 0x1d, 0x3a, 0x87,
	0xdb, 0xe0, 0xa8, 0x1e, 0x9e, 0xbe, 0xaa, 0xd3, 0x8c, 0xab, 0xae, 0x3a, 0xa9, 0xb3, 0xae, 0xc5,
	0x91, 0x9c, 0x36, 0x46, 0xbd, 0xd6, 0x79, 0x9c, 0xbd, 0x2e, 0x92, 0x76, 0xda, 0x18, 0xb9, 0xb4,
	0xd5, 0xcf, 0xf6, 0xed, 0x31, 0x00, 0x00, 0xff, 0xff, 0x47, 0x10, 0xe8, 0x28, 0x8e, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermissionServiceClient is the client API for PermissionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermissionServiceClient interface {
	Slice(ctx context.Context, in *PermissionSliceReq, opts ...grpc.CallOption) (*PermissionSliceRes, error)
	Create(ctx context.Context, in *PermissionCreateReq, opts ...grpc.CallOption) (*PermissionCreateRes, error)
	Read(ctx context.Context, in *PermissionReadReq, opts ...grpc.CallOption) (*PermissionReadRes, error)
	Update(ctx context.Context, in *PermissionUpdateReq, opts ...grpc.CallOption) (*PermissionUpdateRes, error)
	Delete(ctx context.Context, in *PermissionDeleteReq, opts ...grpc.CallOption) (*PermissionDeleteRes, error)
}

type permissionServiceClient struct {
	cc *grpc.ClientConn
}

func NewPermissionServiceClient(cc *grpc.ClientConn) PermissionServiceClient {
	return &permissionServiceClient{cc}
}

func (c *permissionServiceClient) Slice(ctx context.Context, in *PermissionSliceReq, opts ...grpc.CallOption) (*PermissionSliceRes, error) {
	out := new(PermissionSliceRes)
	err := c.cc.Invoke(ctx, "/api.PermissionService/Slice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Create(ctx context.Context, in *PermissionCreateReq, opts ...grpc.CallOption) (*PermissionCreateRes, error) {
	out := new(PermissionCreateRes)
	err := c.cc.Invoke(ctx, "/api.PermissionService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Read(ctx context.Context, in *PermissionReadReq, opts ...grpc.CallOption) (*PermissionReadRes, error) {
	out := new(PermissionReadRes)
	err := c.cc.Invoke(ctx, "/api.PermissionService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Update(ctx context.Context, in *PermissionUpdateReq, opts ...grpc.CallOption) (*PermissionUpdateRes, error) {
	out := new(PermissionUpdateRes)
	err := c.cc.Invoke(ctx, "/api.PermissionService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionServiceClient) Delete(ctx context.Context, in *PermissionDeleteReq, opts ...grpc.CallOption) (*PermissionDeleteRes, error) {
	out := new(PermissionDeleteRes)
	err := c.cc.Invoke(ctx, "/api.PermissionService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionServiceServer is the server API for PermissionService service.
type PermissionServiceServer interface {
	Slice(context.Context, *PermissionSliceReq) (*PermissionSliceRes, error)
	Create(context.Context, *PermissionCreateReq) (*PermissionCreateRes, error)
	Read(context.Context, *PermissionReadReq) (*PermissionReadRes, error)
	Update(context.Context, *PermissionUpdateReq) (*PermissionUpdateRes, error)
	Delete(context.Context, *PermissionDeleteReq) (*PermissionDeleteRes, error)
}

func RegisterPermissionServiceServer(s *grpc.Server, srv PermissionServiceServer) {
	s.RegisterService(&_PermissionService_serviceDesc, srv)
}

func _PermissionService_Slice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionSliceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Slice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PermissionService/Slice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Slice(ctx, req.(*PermissionSliceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PermissionService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Create(ctx, req.(*PermissionCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PermissionService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Read(ctx, req.(*PermissionReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PermissionService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Update(ctx, req.(*PermissionUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PermissionService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PermissionService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServiceServer).Delete(ctx, req.(*PermissionDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PermissionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PermissionService",
	HandlerType: (*PermissionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Slice",
			Handler:    _PermissionService_Slice_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _PermissionService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _PermissionService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PermissionService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PermissionService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "permission.proto",
}
