syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message User {
    // @inject_tag: bson:"_id"
    google.protobuf.StringValue ID = 1;
    // @inject_tag: bson:"username"
    google.protobuf.StringValue Username = 2;
    // @inject_tag: bson:"groups"
    repeated google.protobuf.StringValue Groups = 3;
    // @inject_tag: bson:"roleid"
    google.protobuf.StringValue RoleID = 4;
    // @inject_tag: bson:"createdby"
    google.protobuf.StringValue CreatedBy = 5;
    // @inject_tag: bson:"createdat"
    google.protobuf.Timestamp CreatedAt = 6;
    // @inject_tag: bson:"modifiedby"
    google.protobuf.StringValue ModifiedBy = 7;
    // @inject_tag: bson:"modifiedat"
    google.protobuf.Timestamp ModifiedAt = 8;
}

message UserListReq {
    // do not filter
}

message UserListRes {
    // return a collection of users
    repeated User Users = 1;
}

message UserCreateReq {
    // create a user
    User User = 1;
}

message UserCreateRes {
    // reutrn an id
    google.protobuf.StringValue ID = 1;
}

message UserReadReq {
    // read a user by id
    google.protobuf.StringValue ID = 1;
}

message UserReadRes {
    // return a user
    User User = 1;
}

message UserReadByUsernameReq {
    // read a user by id
    google.protobuf.StringValue Username = 1;
}

message UserReadByUsernameRes {
    // return a user
    User User = 1;
}

message UserUpdateReq {
    // update a user by id
    User User = 1;
}

message UserUpdateRes {
    // return number of users updated
    // should equal 1 on success
    google.protobuf.Int64Value Updated = 1;
}

message UserDeleteReq {
    // delete a user by id
    google.protobuf.StringValue ID = 1;
}

message UserDeleteRes {
    // return number of users deleted
    // should equal 1 on success
    google.protobuf.Int64Value Deleted = 1;
}

service UserService {
    rpc List(UserListReq) returns (UserListRes);
    rpc Create(UserCreateReq) returns (UserCreateRes);
    rpc Read(UserReadReq) returns (UserReadRes);
    rpc ReadByUsername(UserReadByUsernameReq) returns (UserReadByUsernameRes);
    rpc Update(UserUpdateReq) returns (UserUpdateRes);
    rpc Delete(UserDeleteReq) returns (UserDeleteRes);
}
