syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "github.com/srikrsna/protoc-gen-gotag/tagger/tagger.proto";

message User {
    string ID = 1 [(tagger.tags) = "bson:\"_id,omitempty\""];
    string Username = 2 [(tagger.tags) = "bson:\"username,omitempty\""];;
    repeated string Groups = 3 [(tagger.tags) = "bson:\"groups,omitempty\""];
    string CreatedBy = 4 [(tagger.tags) = "bson:\"createdby,omitempty\""];
    google.protobuf.Timestamp CreatedAt = 5 [(tagger.tags) = "bson:\"createdat,omitempty\""];
    string ModifiedBy = 6 [(tagger.tags) = "bson:\"modifiedby,omitempty\""];
    google.protobuf.Timestamp ModifiedAt = 7 [(tagger.tags) = "bson:\"modifiedat,omitempty\""];
}

message UserSliceReq {
    // do not filter
}

message UserSliceRes {
    // return a collection of users
    repeated User Users = 1;
}

message UserCreateReq {
    // create a user
    User User = 1;
}

message UserCreateRes {
    // reutrn an id
    string ID = 1;
}

message UserReadReq {
    // read a user by id
    string ID = 1;
}

message UserReadRes {
    // return a user
    User User = 1;
}

message UserByUsernameReq {
    // read a user by id
    string Username = 1;
}

message UserByUsernameRes {
    // return a user
    User User = 1;
}

message UserUpdateReq {
    // update a user by id
    User User = 1;
}

message UserUpdateRes {
    // return number of users updated
    // should equal 1 on success
    int64 Updated = 1;
}

message UserDeleteReq {
    // delete a user by id
    string ID = 1;
}

message UserDeleteRes {
    // return number of users deleted
    // should equal 1 on success
    int64 Deleted = 1;
}

service UserService {
    rpc Slice(UserSliceReq) returns (UserSliceRes);
    rpc Create(UserCreateReq) returns (UserCreateRes);
    rpc Read(UserReadReq) returns (UserReadRes);
    rpc ByUsername(UserByUsernameReq) returns (UserByUsernameRes);
    rpc Update(UserUpdateReq) returns (UserUpdateRes);
    rpc Delete(UserDeleteReq) returns (UserDeleteRes);
}
