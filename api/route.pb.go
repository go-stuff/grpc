// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Route struct {
	// @inject_tag: bson:"_id"
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" bson:"_id"`
	// @inject_tag: bson:"name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty" bson:"name"`
	// @inject_tag: bson:"createdby"
	CreatedBy string `protobuf:"bytes,3,opt,name=CreatedBy,proto3" json:"CreatedBy,omitempty" bson:"createdby"`
	// @inject_tag: bson:"createdat"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" bson:"createdat"`
	// @inject_tag: bson:"modifiedby"
	ModifiedBy string `protobuf:"bytes,5,opt,name=ModifiedBy,proto3" json:"ModifiedBy,omitempty" bson:"modifiedby"`
	// @inject_tag: bson:"modifiedat"
	ModifiedAt           *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ModifiedAt,proto3" json:"ModifiedAt,omitempty" bson:"modifiedat"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{0}
}

func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (m *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(m, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *Route) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Route) GetModifiedBy() string {
	if m != nil {
		return m.ModifiedBy
	}
	return ""
}

func (m *Route) GetModifiedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedAt
	}
	return nil
}

type RouteSliceReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteSliceReq) Reset()         { *m = RouteSliceReq{} }
func (m *RouteSliceReq) String() string { return proto.CompactTextString(m) }
func (*RouteSliceReq) ProtoMessage()    {}
func (*RouteSliceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{1}
}

func (m *RouteSliceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteSliceReq.Unmarshal(m, b)
}
func (m *RouteSliceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteSliceReq.Marshal(b, m, deterministic)
}
func (m *RouteSliceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteSliceReq.Merge(m, src)
}
func (m *RouteSliceReq) XXX_Size() int {
	return xxx_messageInfo_RouteSliceReq.Size(m)
}
func (m *RouteSliceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteSliceReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteSliceReq proto.InternalMessageInfo

type RouteSliceRes struct {
	// return a collection of Routes
	Routes               []*Route `protobuf:"bytes,1,rep,name=Routes,proto3" json:"Routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteSliceRes) Reset()         { *m = RouteSliceRes{} }
func (m *RouteSliceRes) String() string { return proto.CompactTextString(m) }
func (*RouteSliceRes) ProtoMessage()    {}
func (*RouteSliceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{2}
}

func (m *RouteSliceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteSliceRes.Unmarshal(m, b)
}
func (m *RouteSliceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteSliceRes.Marshal(b, m, deterministic)
}
func (m *RouteSliceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteSliceRes.Merge(m, src)
}
func (m *RouteSliceRes) XXX_Size() int {
	return xxx_messageInfo_RouteSliceRes.Size(m)
}
func (m *RouteSliceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteSliceRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteSliceRes proto.InternalMessageInfo

func (m *RouteSliceRes) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type RouteCreateReq struct {
	// create a Route
	Route                *Route   `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteCreateReq) Reset()         { *m = RouteCreateReq{} }
func (m *RouteCreateReq) String() string { return proto.CompactTextString(m) }
func (*RouteCreateReq) ProtoMessage()    {}
func (*RouteCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{3}
}

func (m *RouteCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteCreateReq.Unmarshal(m, b)
}
func (m *RouteCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteCreateReq.Marshal(b, m, deterministic)
}
func (m *RouteCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteCreateReq.Merge(m, src)
}
func (m *RouteCreateReq) XXX_Size() int {
	return xxx_messageInfo_RouteCreateReq.Size(m)
}
func (m *RouteCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteCreateReq proto.InternalMessageInfo

func (m *RouteCreateReq) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type RouteCreateRes struct {
	// reutrn an id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteCreateRes) Reset()         { *m = RouteCreateRes{} }
func (m *RouteCreateRes) String() string { return proto.CompactTextString(m) }
func (*RouteCreateRes) ProtoMessage()    {}
func (*RouteCreateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{4}
}

func (m *RouteCreateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteCreateRes.Unmarshal(m, b)
}
func (m *RouteCreateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteCreateRes.Marshal(b, m, deterministic)
}
func (m *RouteCreateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteCreateRes.Merge(m, src)
}
func (m *RouteCreateRes) XXX_Size() int {
	return xxx_messageInfo_RouteCreateRes.Size(m)
}
func (m *RouteCreateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteCreateRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteCreateRes proto.InternalMessageInfo

func (m *RouteCreateRes) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RouteReadReq struct {
	// read a Route by id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReadReq) Reset()         { *m = RouteReadReq{} }
func (m *RouteReadReq) String() string { return proto.CompactTextString(m) }
func (*RouteReadReq) ProtoMessage()    {}
func (*RouteReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{5}
}

func (m *RouteReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReadReq.Unmarshal(m, b)
}
func (m *RouteReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReadReq.Marshal(b, m, deterministic)
}
func (m *RouteReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReadReq.Merge(m, src)
}
func (m *RouteReadReq) XXX_Size() int {
	return xxx_messageInfo_RouteReadReq.Size(m)
}
func (m *RouteReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReadReq proto.InternalMessageInfo

func (m *RouteReadReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RouteReadRes struct {
	// return a Route
	Route                *Route   `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReadRes) Reset()         { *m = RouteReadRes{} }
func (m *RouteReadRes) String() string { return proto.CompactTextString(m) }
func (*RouteReadRes) ProtoMessage()    {}
func (*RouteReadRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{6}
}

func (m *RouteReadRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReadRes.Unmarshal(m, b)
}
func (m *RouteReadRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReadRes.Marshal(b, m, deterministic)
}
func (m *RouteReadRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReadRes.Merge(m, src)
}
func (m *RouteReadRes) XXX_Size() int {
	return xxx_messageInfo_RouteReadRes.Size(m)
}
func (m *RouteReadRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReadRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReadRes proto.InternalMessageInfo

func (m *RouteReadRes) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type RouteReadByNameReq struct {
	// read a Route by name
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReadByNameReq) Reset()         { *m = RouteReadByNameReq{} }
func (m *RouteReadByNameReq) String() string { return proto.CompactTextString(m) }
func (*RouteReadByNameReq) ProtoMessage()    {}
func (*RouteReadByNameReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{7}
}

func (m *RouteReadByNameReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReadByNameReq.Unmarshal(m, b)
}
func (m *RouteReadByNameReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReadByNameReq.Marshal(b, m, deterministic)
}
func (m *RouteReadByNameReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReadByNameReq.Merge(m, src)
}
func (m *RouteReadByNameReq) XXX_Size() int {
	return xxx_messageInfo_RouteReadByNameReq.Size(m)
}
func (m *RouteReadByNameReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReadByNameReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReadByNameReq proto.InternalMessageInfo

func (m *RouteReadByNameReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RouteReadByNameRes struct {
	// return a Route
	Route                *Route   `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteReadByNameRes) Reset()         { *m = RouteReadByNameRes{} }
func (m *RouteReadByNameRes) String() string { return proto.CompactTextString(m) }
func (*RouteReadByNameRes) ProtoMessage()    {}
func (*RouteReadByNameRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{8}
}

func (m *RouteReadByNameRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteReadByNameRes.Unmarshal(m, b)
}
func (m *RouteReadByNameRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteReadByNameRes.Marshal(b, m, deterministic)
}
func (m *RouteReadByNameRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteReadByNameRes.Merge(m, src)
}
func (m *RouteReadByNameRes) XXX_Size() int {
	return xxx_messageInfo_RouteReadByNameRes.Size(m)
}
func (m *RouteReadByNameRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteReadByNameRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteReadByNameRes proto.InternalMessageInfo

func (m *RouteReadByNameRes) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type RouteUpdateReq struct {
	// update a Route by id
	Route                *Route   `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteUpdateReq) Reset()         { *m = RouteUpdateReq{} }
func (m *RouteUpdateReq) String() string { return proto.CompactTextString(m) }
func (*RouteUpdateReq) ProtoMessage()    {}
func (*RouteUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{9}
}

func (m *RouteUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteUpdateReq.Unmarshal(m, b)
}
func (m *RouteUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteUpdateReq.Marshal(b, m, deterministic)
}
func (m *RouteUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteUpdateReq.Merge(m, src)
}
func (m *RouteUpdateReq) XXX_Size() int {
	return xxx_messageInfo_RouteUpdateReq.Size(m)
}
func (m *RouteUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteUpdateReq proto.InternalMessageInfo

func (m *RouteUpdateReq) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type RouteUpdateRes struct {
	// return number of Routes updated
	// should equal 1 on success
	Updated              int64    `protobuf:"varint,1,opt,name=Updated,proto3" json:"Updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteUpdateRes) Reset()         { *m = RouteUpdateRes{} }
func (m *RouteUpdateRes) String() string { return proto.CompactTextString(m) }
func (*RouteUpdateRes) ProtoMessage()    {}
func (*RouteUpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{10}
}

func (m *RouteUpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteUpdateRes.Unmarshal(m, b)
}
func (m *RouteUpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteUpdateRes.Marshal(b, m, deterministic)
}
func (m *RouteUpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteUpdateRes.Merge(m, src)
}
func (m *RouteUpdateRes) XXX_Size() int {
	return xxx_messageInfo_RouteUpdateRes.Size(m)
}
func (m *RouteUpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteUpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteUpdateRes proto.InternalMessageInfo

func (m *RouteUpdateRes) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type RouteDeleteReq struct {
	// delete a Route by id
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteDeleteReq) Reset()         { *m = RouteDeleteReq{} }
func (m *RouteDeleteReq) String() string { return proto.CompactTextString(m) }
func (*RouteDeleteReq) ProtoMessage()    {}
func (*RouteDeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{11}
}

func (m *RouteDeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDeleteReq.Unmarshal(m, b)
}
func (m *RouteDeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDeleteReq.Marshal(b, m, deterministic)
}
func (m *RouteDeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDeleteReq.Merge(m, src)
}
func (m *RouteDeleteReq) XXX_Size() int {
	return xxx_messageInfo_RouteDeleteReq.Size(m)
}
func (m *RouteDeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDeleteReq proto.InternalMessageInfo

func (m *RouteDeleteReq) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type RouteDeleteRes struct {
	// return number of Routes deleted
	// should equal 1 on success
	Deleted              int64    `protobuf:"varint,1,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteDeleteRes) Reset()         { *m = RouteDeleteRes{} }
func (m *RouteDeleteRes) String() string { return proto.CompactTextString(m) }
func (*RouteDeleteRes) ProtoMessage()    {}
func (*RouteDeleteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0984d49a362b6b9f, []int{12}
}

func (m *RouteDeleteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDeleteRes.Unmarshal(m, b)
}
func (m *RouteDeleteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDeleteRes.Marshal(b, m, deterministic)
}
func (m *RouteDeleteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDeleteRes.Merge(m, src)
}
func (m *RouteDeleteRes) XXX_Size() int {
	return xxx_messageInfo_RouteDeleteRes.Size(m)
}
func (m *RouteDeleteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDeleteRes.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDeleteRes proto.InternalMessageInfo

func (m *RouteDeleteRes) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

func init() {
	proto.RegisterType((*Route)(nil), "api.Route")
	proto.RegisterType((*RouteSliceReq)(nil), "api.RouteSliceReq")
	proto.RegisterType((*RouteSliceRes)(nil), "api.RouteSliceRes")
	proto.RegisterType((*RouteCreateReq)(nil), "api.RouteCreateReq")
	proto.RegisterType((*RouteCreateRes)(nil), "api.RouteCreateRes")
	proto.RegisterType((*RouteReadReq)(nil), "api.RouteReadReq")
	proto.RegisterType((*RouteReadRes)(nil), "api.RouteReadRes")
	proto.RegisterType((*RouteReadByNameReq)(nil), "api.RouteReadByNameReq")
	proto.RegisterType((*RouteReadByNameRes)(nil), "api.RouteReadByNameRes")
	proto.RegisterType((*RouteUpdateReq)(nil), "api.RouteUpdateReq")
	proto.RegisterType((*RouteUpdateRes)(nil), "api.RouteUpdateRes")
	proto.RegisterType((*RouteDeleteReq)(nil), "api.RouteDeleteReq")
	proto.RegisterType((*RouteDeleteRes)(nil), "api.RouteDeleteRes")
}

func init() { proto.RegisterFile("route.proto", fileDescriptor_0984d49a362b6b9f) }

var fileDescriptor_0984d49a362b6b9f = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0xce, 0x93, 0x40,
	0x14, 0x0d, 0xd0, 0x62, 0xbe, 0x5b, 0xfd, 0x8c, 0xd7, 0x85, 0x64, 0x62, 0x3e, 0xc9, 0xac, 0x48,
	0x63, 0xa8, 0xa1, 0x89, 0x31, 0x2e, 0x4c, 0x5a, 0xbb, 0xe9, 0x42, 0x17, 0x54, 0x1f, 0x80, 0x96,
	0x69, 0x43, 0xd2, 0x06, 0xca, 0x50, 0x93, 0x3e, 0xa2, 0x4f, 0xe1, 0xab, 0x18, 0xee, 0xc0, 0xf0,
	0x53, 0x8c, 0xdd, 0x71, 0xcf, 0xb9, 0xe7, 0x70, 0x7b, 0x0e, 0x85, 0x49, 0x9e, 0x5e, 0x0a, 0xe1,
	0x67, 0x79, 0x5a, 0xa4, 0x68, 0x45, 0x59, 0xc2, 0xde, 0x1d, 0xd2, 0xf4, 0x70, 0x14, 0x33, 0x82,
	0xb6, 0x97, 0xfd, 0xac, 0x48, 0x4e, 0x42, 0x16, 0xd1, 0x29, 0x53, 0x5b, 0xfc, 0x8f, 0x01, 0xe3,
	0xb0, 0x54, 0xe1, 0x23, 0x98, 0xeb, 0x95, 0x63, 0xb8, 0x86, 0xf7, 0x10, 0x9a, 0xeb, 0x15, 0x22,
	0x8c, 0xbe, 0x47, 0x27, 0xe1, 0x98, 0x84, 0xd0, 0x33, 0xbe, 0x85, 0x87, 0xaf, 0xb9, 0x88, 0x0a,
	0x11, 0x2f, 0xaf, 0x8e, 0x45, 0x44, 0x03, 0xe0, 0x27, 0xcd, 0x2e, 0x0a, 0x67, 0xe4, 0x1a, 0xde,
	0x24, 0x60, 0xbe, 0x3a, 0xc0, 0xaf, 0x0f, 0xf0, 0x7f, 0xd4, 0x07, 0x84, 0xcd, 0x32, 0x3e, 0x01,
	0x7c, 0x4b, 0xe3, 0x64, 0x9f, 0x90, 0xf1, 0x98, 0x8c, 0x5b, 0x08, 0x7e, 0x6e, 0xf8, 0x45, 0xe1,
	0xd8, 0xff, 0xb5, 0x6e, 0x6d, 0xf3, 0x97, 0xf0, 0x82, 0x7e, 0xe0, 0xe6, 0x98, 0xec, 0x44, 0x28,
	0xce, 0x7c, 0xde, 0x05, 0x24, 0x72, 0xb0, 0x09, 0x90, 0x8e, 0xe1, 0x5a, 0xde, 0x24, 0x00, 0x3f,
	0xca, 0x12, 0x9f, 0xa0, 0xb0, 0x62, 0x78, 0x00, 0x8f, 0xf4, 0xa4, 0x6e, 0x0e, 0xc5, 0x19, 0xdd,
	0x2a, 0x38, 0x8a, 0xac, 0x2b, 0x52, 0x04, 0x77, 0x7b, 0x1a, 0xd9, 0xcf, 0x98, 0x3f, 0xc1, 0x73,
	0xa5, 0x10, 0x51, 0x5c, 0x7a, 0xf6, 0xf9, 0x0f, 0x1d, 0x5e, 0xde, 0xf1, 0x4e, 0x0f, 0x50, 0x2b,
	0x96, 0xd7, 0xb2, 0xb4, 0xd2, 0xb7, 0xee, 0xd2, 0x68, 0xba, 0xe4, 0x1f, 0x07, 0x36, 0xef, 0x79,
	0x43, 0x9d, 0xc4, 0xcf, 0x2c, 0xbe, 0x3b, 0x89, 0x69, 0x4f, 0x23, 0xd1, 0x81, 0x67, 0x6a, 0x88,
	0x49, 0x65, 0x85, 0xf5, 0xa8, 0x53, 0x5b, 0x89, 0xa3, 0x50, 0xfe, 0xfd, 0x54, 0xa6, 0xbd, 0x0d,
	0x72, 0x53, 0x83, 0x76, 0xab, 0xc6, 0xe0, 0xb7, 0x59, 0x45, 0xb8, 0x11, 0xf9, 0xaf, 0x64, 0x27,
	0x70, 0x06, 0x63, 0x2a, 0x1e, 0xb1, 0x39, 0xb3, 0xfe, 0x34, 0xd8, 0x2d, 0x26, 0x31, 0x00, 0x5b,
	0x15, 0x88, 0xaf, 0x1b, 0x56, 0x7f, 0x06, 0x6c, 0x00, 0x94, 0xf8, 0x1e, 0x46, 0x65, 0xac, 0xf8,
	0xaa, 0x15, 0x85, 0xaa, 0x98, 0xdd, 0x40, 0x12, 0xbf, 0x00, 0x34, 0x25, 0xe0, 0x9b, 0xee, 0x82,
	0x2e, 0x91, 0xfd, 0x83, 0xa0, 0x0b, 0x55, 0x78, 0xed, 0x0b, 0x75, 0x3d, 0x6c, 0x00, 0x24, 0x8d,
	0x8a, 0xa8, 0xad, 0xd1, 0x91, 0xb3, 0x01, 0x50, 0x6e, 0x6d, 0xfa, 0xa7, 0xcd, 0xff, 0x06, 0x00,
	0x00, 0xff, 0xff, 0xae, 0x16, 0x9d, 0x74, 0x67, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteServiceClient is the client API for RouteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteServiceClient interface {
	Slice(ctx context.Context, in *RouteSliceReq, opts ...grpc.CallOption) (*RouteSliceRes, error)
	Create(ctx context.Context, in *RouteCreateReq, opts ...grpc.CallOption) (*RouteCreateRes, error)
	Read(ctx context.Context, in *RouteReadReq, opts ...grpc.CallOption) (*RouteReadRes, error)
	ReadByName(ctx context.Context, in *RouteReadByNameReq, opts ...grpc.CallOption) (*RouteReadByNameRes, error)
	Update(ctx context.Context, in *RouteUpdateReq, opts ...grpc.CallOption) (*RouteUpdateRes, error)
	Delete(ctx context.Context, in *RouteDeleteReq, opts ...grpc.CallOption) (*RouteDeleteRes, error)
}

type routeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRouteServiceClient(cc *grpc.ClientConn) RouteServiceClient {
	return &routeServiceClient{cc}
}

func (c *routeServiceClient) Slice(ctx context.Context, in *RouteSliceReq, opts ...grpc.CallOption) (*RouteSliceRes, error) {
	out := new(RouteSliceRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/Slice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) Create(ctx context.Context, in *RouteCreateReq, opts ...grpc.CallOption) (*RouteCreateRes, error) {
	out := new(RouteCreateRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) Read(ctx context.Context, in *RouteReadReq, opts ...grpc.CallOption) (*RouteReadRes, error) {
	out := new(RouteReadRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) ReadByName(ctx context.Context, in *RouteReadByNameReq, opts ...grpc.CallOption) (*RouteReadByNameRes, error) {
	out := new(RouteReadByNameRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/ReadByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) Update(ctx context.Context, in *RouteUpdateReq, opts ...grpc.CallOption) (*RouteUpdateRes, error) {
	out := new(RouteUpdateRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) Delete(ctx context.Context, in *RouteDeleteReq, opts ...grpc.CallOption) (*RouteDeleteRes, error) {
	out := new(RouteDeleteRes)
	err := c.cc.Invoke(ctx, "/api.RouteService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteServiceServer is the server API for RouteService service.
type RouteServiceServer interface {
	Slice(context.Context, *RouteSliceReq) (*RouteSliceRes, error)
	Create(context.Context, *RouteCreateReq) (*RouteCreateRes, error)
	Read(context.Context, *RouteReadReq) (*RouteReadRes, error)
	ReadByName(context.Context, *RouteReadByNameReq) (*RouteReadByNameRes, error)
	Update(context.Context, *RouteUpdateReq) (*RouteUpdateRes, error)
	Delete(context.Context, *RouteDeleteReq) (*RouteDeleteRes, error)
}

func RegisterRouteServiceServer(s *grpc.Server, srv RouteServiceServer) {
	s.RegisterService(&_RouteService_serviceDesc, srv)
}

func _RouteService_Slice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteSliceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Slice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/Slice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Slice(ctx, req.(*RouteSliceReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Create(ctx, req.(*RouteCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Read(ctx, req.(*RouteReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_ReadByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteReadByNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).ReadByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/ReadByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).ReadByName(ctx, req.(*RouteReadByNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Update(ctx, req.(*RouteUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.RouteService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).Delete(ctx, req.(*RouteDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.RouteService",
	HandlerType: (*RouteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Slice",
			Handler:    _RouteService_Slice_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RouteService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _RouteService_Read_Handler,
		},
		{
			MethodName: "ReadByName",
			Handler:    _RouteService_ReadByName_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RouteService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RouteService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "route.proto",
}
