// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Session struct {
	// @inject_tag: bson:"_id"
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty" bson:"_id"`
	// @inject_tag: bson:"username"
	Username string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty" bson:"username"`
	// @inject_tag: bson:"remoteaddr"
	RemoteAddr string `protobuf:"bytes,3,opt,name=RemoteAddr,proto3" json:"RemoteAddr,omitempty" bson:"remoteaddr"`
	// @inject_tag: bson:"host"
	Host string `protobuf:"bytes,4,opt,name=Host,proto3" json:"Host,omitempty" bson:"host"`
	// @inject_tag: bson:"createdat"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty" bson:"createdat"`
	// @inject_tag: bson:"expiresat"
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ExpiresAt,proto3" json:"ExpiresAt,omitempty" bson:"expiresat"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{0}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Session) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Session) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *Session) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Session) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Session) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

type SessionSliceReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionSliceReq) Reset()         { *m = SessionSliceReq{} }
func (m *SessionSliceReq) String() string { return proto.CompactTextString(m) }
func (*SessionSliceReq) ProtoMessage()    {}
func (*SessionSliceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{1}
}

func (m *SessionSliceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionSliceReq.Unmarshal(m, b)
}
func (m *SessionSliceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionSliceReq.Marshal(b, m, deterministic)
}
func (m *SessionSliceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionSliceReq.Merge(m, src)
}
func (m *SessionSliceReq) XXX_Size() int {
	return xxx_messageInfo_SessionSliceReq.Size(m)
}
func (m *SessionSliceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionSliceReq.DiscardUnknown(m)
}

var xxx_messageInfo_SessionSliceReq proto.InternalMessageInfo

type SessionSliceRes struct {
	// return a collection of Sessions
	Sessions             []*Session `protobuf:"bytes,1,rep,name=Sessions,proto3" json:"Sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionSliceRes) Reset()         { *m = SessionSliceRes{} }
func (m *SessionSliceRes) String() string { return proto.CompactTextString(m) }
func (*SessionSliceRes) ProtoMessage()    {}
func (*SessionSliceRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a6be1b361fa6f14, []int{2}
}

func (m *SessionSliceRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionSliceRes.Unmarshal(m, b)
}
func (m *SessionSliceRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionSliceRes.Marshal(b, m, deterministic)
}
func (m *SessionSliceRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionSliceRes.Merge(m, src)
}
func (m *SessionSliceRes) XXX_Size() int {
	return xxx_messageInfo_SessionSliceRes.Size(m)
}
func (m *SessionSliceRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionSliceRes.DiscardUnknown(m)
}

var xxx_messageInfo_SessionSliceRes proto.InternalMessageInfo

func (m *SessionSliceRes) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func init() {
	proto.RegisterType((*Session)(nil), "api.Session")
	proto.RegisterType((*SessionSliceReq)(nil), "api.SessionSliceReq")
	proto.RegisterType((*SessionSliceRes)(nil), "api.SessionSliceRes")
}

func init() { proto.RegisterFile("session.proto", fileDescriptor_3a6be1b361fa6f14) }

var fileDescriptor_3a6be1b361fa6f14 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8f, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x49, 0xd2, 0xd6, 0xf6, 0x56, 0x2b, 0x5e, 0x5c, 0x0c, 0x59, 0x68, 0xc8, 0x2a, 0xab,
	0x29, 0xa4, 0x1b, 0xc1, 0x55, 0xb0, 0x05, 0xbb, 0x4d, 0xf5, 0x01, 0xd2, 0xe6, 0x5a, 0x06, 0x9a,
	0x4e, 0x9c, 0x3b, 0x8a, 0x2f, 0xeb, 0xbb, 0x88, 0x93, 0x1f, 0x8b, 0x08, 0xee, 0x92, 0xef, 0x9c,
	0x6f, 0xe6, 0x0c, 0x5c, 0x30, 0x31, 0x2b, 0x7d, 0x94, 0xb5, 0xd1, 0x56, 0x63, 0x50, 0xd4, 0x2a,
	0xbc, 0xdd, 0x6b, 0xbd, 0x3f, 0xd0, 0xdc, 0xa1, 0xed, 0xdb, 0xcb, 0xdc, 0xaa, 0x8a, 0xd8, 0x16,
	0x55, 0xdd, 0xb4, 0xe2, 0x4f, 0x0f, 0xce, 0x36, 0x8d, 0x87, 0x33, 0xf0, 0xd7, 0x4b, 0xe1, 0x45,
	0x5e, 0x32, 0xc9, 0xfd, 0xf5, 0x12, 0x43, 0x18, 0x3f, 0x33, 0x99, 0x63, 0x51, 0x91, 0xf0, 0x1d,
	0xed, 0xff, 0xf1, 0x06, 0x20, 0xa7, 0x4a, 0x5b, 0xca, 0xca, 0xd2, 0x88, 0xc0, 0xa5, 0x27, 0x04,
	0x11, 0x06, 0x8f, 0x9a, 0xad, 0x18, 0xb8, 0xc4, 0x7d, 0xe3, 0x1d, 0x4c, 0x1e, 0x0c, 0x15, 0x96,
	0xca, 0xcc, 0x8a, 0x61, 0xe4, 0x25, 0xd3, 0x34, 0x94, 0xcd, 0x40, 0xd9, 0x0d, 0x94, 0x4f, 0xdd,
	0xc0, 0xfc, 0xa7, 0xfc, 0x6d, 0xae, 0x3e, 0x6a, 0x65, 0x88, 0x33, 0x2b, 0x46, 0xff, 0x9b, 0x7d,
	0x39, 0xbe, 0x82, 0xcb, 0xf6, 0x79, 0x9b, 0x83, 0xda, 0x51, 0x4e, 0xaf, 0xf1, 0xfd, 0x6f, 0xc4,
	0x98, 0xc0, 0xb8, 0x45, 0x2c, 0xbc, 0x28, 0x48, 0xa6, 0xe9, 0xb9, 0x2c, 0x6a, 0x25, 0x5b, 0x98,
	0xf7, 0x69, 0xba, 0x82, 0x59, 0x27, 0x93, 0x79, 0x57, 0x3b, 0xc2, 0x05, 0x0c, 0xdd, 0x39, 0x78,
	0x7d, 0xaa, 0x74, 0xb7, 0x85, 0x7f, 0x51, 0xde, 0x8e, 0xdc, 0xea, 0xc5, 0x57, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x65, 0xb4, 0xc9, 0x39, 0xb4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionServiceClient is the client API for SessionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionServiceClient interface {
	Slice(ctx context.Context, in *SessionSliceReq, opts ...grpc.CallOption) (*SessionSliceRes, error)
}

type sessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionServiceClient(cc *grpc.ClientConn) SessionServiceClient {
	return &sessionServiceClient{cc}
}

func (c *sessionServiceClient) Slice(ctx context.Context, in *SessionSliceReq, opts ...grpc.CallOption) (*SessionSliceRes, error) {
	out := new(SessionSliceRes)
	err := c.cc.Invoke(ctx, "/api.SessionService/Slice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionServiceServer is the server API for SessionService service.
type SessionServiceServer interface {
	Slice(context.Context, *SessionSliceReq) (*SessionSliceRes, error)
}

func RegisterSessionServiceServer(s *grpc.Server, srv SessionServiceServer) {
	s.RegisterService(&_SessionService_serviceDesc, srv)
}

func _SessionService_Slice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionSliceReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Slice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.SessionService/Slice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Slice(ctx, req.(*SessionSliceReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.SessionService",
	HandlerType: (*SessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Slice",
			Handler:    _SessionService_Slice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "session.proto",
}
